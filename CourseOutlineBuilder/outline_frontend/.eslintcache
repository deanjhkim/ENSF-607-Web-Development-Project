[{"/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/index.js":"1","/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/App.js":"2","/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/reportWebVitals.js":"3","/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/Outline.js":"4","/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/Dashboard.js":"5"},{"size":500,"mtime":1608235117699,"results":"6","hashOfConfig":"7"},{"size":489,"mtime":1608271559309,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608235117699,"results":"9","hashOfConfig":"7"},{"size":11236,"mtime":1608319153135,"results":"10","hashOfConfig":"7"},{"size":7291,"mtime":1608271559309,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ovrb4l",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/index.js",[],["24","25"],"/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/App.js",[],"/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/reportWebVitals.js",[],"/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/Outline.js",["26","27","28","29","30","31","32","33","34","35","36"],"/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/Dashboard.js",["37","38","39","40","41","42","43","44"],"import React, { useEffect, useState, useRef } from 'react';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport { TableRow, TableCell, TableContainer, TableHead, TableBody, Table } from '@material-ui/core';\nimport { Divider } from '@material-ui/core';\nimport { Grid, Box } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core'\nimport Outline from './Outline'\nimport { Link, Redirect, Route, useHistory } from 'react-router-dom';\nimport { Paper } from '@material-ui/core'\n\nfunction OutlineTable(props) {\n\n  const { outlines, itemSelected, setItemSelected } = props;\n\n  const handleSelection = (e, index) => {\n    if (itemSelected === index) {\n      setItemSelected(null);\n    }\n    else setItemSelected(index);\n  };\n\n  let isSelected = (index) => itemSelected === index;\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Course Faculty</TableCell>\n            <TableCell align=\"left\">Course Number</TableCell>\n            <TableCell align=\"left\">Term</TableCell>\n            <TableCell align=\"left\">Section</TableCell>\n            <TableCell align=\"left\">Description</TableCell>\n            <TableCell align=\"left\">Date Created</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {outlines.map((row, index) => (\n            <TableRow key={index}\n              onClick={(e) =>\n                handleSelection(e, index)}\n              hover role=\"checkbox\"\n              selected={isSelected(index)}>\n              <TableCell>\n                {row.faculty}\n              </TableCell>\n              <TableCell align=\"left\">{row.number}</TableCell>\n              <TableCell align=\"left\">{row.term}</TableCell>\n              <TableCell align=\"left\">{row.section}</TableCell>\n              <TableCell align=\"left\">{row.description}</TableCell>\n              <TableCell align=\"left\">{row.dateCreated}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table >\n    </TableContainer >\n  );\n}\n\nfunction CreateFormDialog({ open, handleCreateClose }) {\n\n  const history = useHistory();\n\n  const [faculty, setFaculty] = useState(\"\");\n  const [facultyError, setFacultyError] = useState(false);\n\n  const [number, setNumber] = useState(\"\");\n  const [numberError, setNumberError] = useState(false);\n\n  const [term, setTerm] = useState(\"\");\n  const [termError, setTermError] = useState(false);\n\n  const [section, setSection] = useState(\"\");\n  const [sectionError, setSectionError] = useState(false);\n\n  const [description, setDescription] = useState(\"\");\n  const [descError, setDescError] = useState(false);\n\n  const checkFields = () => {\n    if (faculty === \"\" || faculty === null) {\n      setFacultyError(true);\n    } else {\n      setFacultyError(false)\n    }\n    if (number === \"\" || number === null) {\n      setNumberError(true);\n    } else {\n      setNumberError(false)\n    }\n    if (term === \"\" || term === null) {\n      setTermError(true);\n    } else {\n      setTermError(false)\n    }\n    if (section === \"\" || section === null) {\n      setSectionError(true);\n    } else {\n      setSectionError(false)\n    }\n    if (description === \"\" || section === null) {\n      setDescError(true);\n    } else {\n      setDescError(false)\n    }\n  };\n\n  const filledFields = () => {\n    if (facultyError === false && numberError === false\n      && termError === false && sectionError === false\n      && descError === false) {\n      return true;\n    } else return false;\n  };\n\n  const handleCreate = () => {\n    checkFields();\n    goToOutline();\n    if (filledFields()) {\n      \n    }\n  }\n\n  const goToOutline = () => {\n    <Route path='/outlineApp' component={Outline}\n      render={(props) => (<Outline {...props} faculty={faculty} number={number} term={term} section={section} description={description} />)} />\n    history.push('/outlineApp');\n  }\n\n  const displayErrors = () => {\n    console.log(facultyError);\n    console.log(numberError);\n    console.log(termError);\n    console.log(sectionError);\n    console.log(descError);\n  }\n\n  const displayFields = () => {\n    console.log(faculty);\n    console.log(number);\n    console.log(term);\n    console.log(section);\n    console.log(description);\n  }\n\n  const updateValues = () => {\n  }\n  return (\n    <Dialog open={open}>\n      <DialogTitle>\n        Create New Outline\n      </DialogTitle>\n      <DialogContent>\n        <Grid container>\n          <Grid container>\n            <Grid item xs>\n              <TextField label='Faculty' onChange={e => setFaculty(e.target.value)} error={facultyError} helperText={facultyError ? \"Field Required\" : ''} />\n            </Grid>\n            <Grid item xs>\n              <TextField label='Number' onChange={e => setNumber(e.target.value)} error={numberError} helperText={numberError ? \"Field Required\" : ''} />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs>\n              <TextField label='Term' error={termError} onChange={e => setTerm(e.target.value)} helperText={termError ? \"Field Required\" : ''} />\n            </Grid>\n            <Grid item xs>\n              <TextField label='Section' onChange={e => setSection(e.target.value)} error={sectionError} helperText={sectionError ? \"Field Required\" : ''} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Box>\n          <TextField label='Description' fullWidth onChange={e => setDescription(e.target.value)} error={descError} helperText={descError ? \"Field Required\" : ''} />\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCreateClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={handleCreate}>\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction Dashboard() {\n\n  function createOutline(faculty, number, term, section, description, dateCreated) {\n    return { faculty, number, term, section, description, dateCreated };\n  }\n\n  const outlines =\n    [createOutline('ENSF', '607', 'W2020', 'LO1', 'Software Design and Architecture I', '2020-06-12'),\n    createOutline('ENSF', '608', 'F2020', 'LO1', 'Software Design and Architecture II', '2020-08-11')]\n\n  const handleCreateOpen = () => setCreateOpen(true);\n\n  const handleCreateClose = () => setCreateOpen(false);\n\n  const [open, setCreateOpen] = useState(false);\n\n  const [itemSelected, setItemSelected] = useState();\n\n  return (\n    <div className=\"Dashboard\">\n      <Box paddingLeft={2}>\n        <h1>\n          Course Outline Builder\n        </h1>\n      </Box>\n\n      <Box paddingLeft={2}>\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n          <Button onClick={handleCreateOpen}>Create </Button>\n          <Button>Open </Button>\n          <Button>Delete </Button>\n        </ButtonGroup>\n      </Box>\n\n      <Box paddingTop={2}>\n        <Divider />\n      </Box>\n\n      <OutlineTable outlines={outlines} itemSelected={itemSelected} setItemSelected={setItemSelected} />\n\n\n      <CreateFormDialog open={open} handleCreateClose={handleCreateClose} />\n\n    </div>\n\n  );\n}\n\n\nexport default Dashboard;\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":13,"column":8,"nodeType":"51","messageId":"52","endLine":13,"endColumn":13},{"ruleId":"49","severity":1,"message":"53","line":43,"column":13,"nodeType":"51","messageId":"52","endLine":43,"endColumn":20},{"ruleId":"49","severity":1,"message":"54","line":43,"column":22,"nodeType":"51","messageId":"52","endLine":43,"endColumn":28},{"ruleId":"49","severity":1,"message":"55","line":43,"column":30,"nodeType":"51","messageId":"52","endLine":43,"endColumn":34},{"ruleId":"49","severity":1,"message":"56","line":43,"column":36,"nodeType":"51","messageId":"52","endLine":43,"endColumn":43},{"ruleId":"49","severity":1,"message":"57","line":43,"column":45,"nodeType":"51","messageId":"52","endLine":43,"endColumn":56},{"ruleId":"49","severity":1,"message":"58","line":45,"column":12,"nodeType":"51","messageId":"52","endLine":45,"endColumn":22},{"ruleId":"49","severity":1,"message":"59","line":47,"column":12,"nodeType":"51","messageId":"52","endLine":47,"endColumn":23},{"ruleId":"49","severity":1,"message":"60","line":49,"column":12,"nodeType":"51","messageId":"52","endLine":49,"endColumn":25},{"ruleId":"49","severity":1,"message":"61","line":51,"column":12,"nodeType":"51","messageId":"52","endLine":51,"endColumn":23},{"ruleId":"49","severity":1,"message":"62","line":53,"column":12,"nodeType":"51","messageId":"52","endLine":53,"endColumn":20},{"ruleId":"49","severity":1,"message":"63","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},{"ruleId":"49","severity":1,"message":"64","line":1,"column":38,"nodeType":"51","messageId":"52","endLine":1,"endColumn":44},{"ruleId":"49","severity":1,"message":"65","line":8,"column":10,"nodeType":"51","messageId":"52","endLine":8,"endColumn":20},{"ruleId":"49","severity":1,"message":"66","line":10,"column":10,"nodeType":"51","messageId":"52","endLine":10,"endColumn":14},{"ruleId":"49","severity":1,"message":"67","line":10,"column":16,"nodeType":"51","messageId":"52","endLine":10,"endColumn":24},{"ruleId":"49","severity":1,"message":"68","line":131,"column":9,"nodeType":"51","messageId":"52","endLine":131,"endColumn":22},{"ruleId":"49","severity":1,"message":"69","line":139,"column":9,"nodeType":"51","messageId":"52","endLine":139,"endColumn":22},{"ruleId":"49","severity":1,"message":"70","line":147,"column":9,"nodeType":"51","messageId":"52","endLine":147,"endColumn":21},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'faculty' is assigned a value but never used.","'number' is assigned a value but never used.","'term' is assigned a value but never used.","'section' is assigned a value but never used.","'description' is assigned a value but never used.","'courseDesc' is assigned a value but never used.","'courseHours' is assigned a value but never used.","'courseCredits' is assigned a value but never used.","'calendarRef' is assigned a value but never used.","'examInfo' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'makeStyles' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'displayErrors' is assigned a value but never used.","'displayFields' is assigned a value but never used.","'updateValues' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]