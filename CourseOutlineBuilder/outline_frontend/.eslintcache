[{"/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/index.js":"1","/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/App.js":"2","/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/reportWebVitals.js":"3","/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/Outline.js":"4","/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/Dashboard.js":"5"},{"size":500,"mtime":1608234223148,"results":"6","hashOfConfig":"7"},{"size":501,"mtime":1608234712825,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608234223148,"results":"9","hashOfConfig":"7"},{"size":183,"mtime":1608234432892,"results":"10","hashOfConfig":"7"},{"size":4776,"mtime":1608234584924,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ovrb4l",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/index.js",[],["24","25"],"/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/App.js",["26"],"/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/reportWebVitals.js",[],"/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/Outline.js",[],"/home/evan/Documents/ENSF607/ENSF-607-Web-Development-Project/CourseOutlineBuilder/outline_frontend/src/Dashboard.js",["27","28","29","30"],"import React, { useState } from 'react';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport { TableRow, TableCell, TableContainer, TableHead, TableBody } from '@material-ui/core';\nimport { Divider } from '@material-ui/core';\nimport { Grid, Box } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\n\nimport Outline from './Outline';\nimport { Link } from 'react-router-dom';\n\n\n\n\nfunction TableHeader() {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>\n          Faculty\n      </TableCell>\n        <TableCell>\n          Number\n      </TableCell>\n        <TableCell>\n          Term\n      </TableCell>\n        <TableCell>\n          Section\n      </TableCell>\n        <TableCell>\n          Decription\n      </TableCell>\n        <TableCell>\n          Date Created\n      </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n};\n\nfunction OutlineTable({ outlines }) {\n\n  const createRows = () => {\n    outlines.map((row) => {\n      return (\n        <TableRow>\n          <TableCell>\n            {row.faculty}\n          </TableCell>\n          <TableCell>\n            {row.number}\n          </TableCell>\n          <TableCell>\n            {row.term}\n          </TableCell>\n          <TableCell>\n            {row.section}\n          </TableCell>\n          <TableCell>\n            {row.description}\n          </TableCell>\n          <TableCell>\n            {row.dateCreated}\n          </TableCell>\n        </TableRow>\n      );\n    });\n  };\n\n  return (\n    <Box>\n      <TableContainer>\n        <TableHead>\n          <TableHeader />\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              {outlines[0].faculty}\n            </TableCell>\n            <TableCell>\n              {outlines[0].number}\n            </TableCell>\n            <TableCell>\n              {outlines[0].term}\n            </TableCell>\n            <TableCell>\n              {outlines[0].section}\n            </TableCell>\n            <TableCell>\n              {outlines[0].description}\n            </TableCell>\n            <TableCell>\n              {outlines[0].dateCreated}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </TableContainer>\n    </Box>\n  );\n}\n\n\n\nfunction CreateFormDialog({ open, handleCreateClose }) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle>\n        Create New Outline\n      </DialogTitle>\n      <DialogContent>\n        <Grid container>\n          <Grid container>\n            <Grid item xs>\n              <TextField label='Faculty' />\n            </Grid>\n            <Grid item xs>\n              <TextField label='Number' />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs>\n              <TextField label='Term' />\n            </Grid>\n            <Grid item xs>\n              <TextField label='Section' />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Box>\n          <TextField label='Description' fullWidth='true' />\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCreateClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Link to='/outline' style={{ textDecoration: 'none' }} >\n        <Button color=\"primary\" renderAs='button'>\n          Create\n        </Button>\n        </Link>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction Dashboard() {\n\n  function createOutline(faculty, number, term, section, description, dateCreated) {\n    return { faculty, number, term, section, description, dateCreated };\n  }\n\n  const outlines =\n    [createOutline('ENSF', '607', 'W2020', 'LO1', 'Principles of Sowftware Design', '2020-06-12'),\n    createOutline('ENSF', '607', 'W2020', 'LO1', 'Principles of Sowftware Design', '2020-06-12')]\n\n  const handleCreateOpen = () => setCreateOpen(true);\n\n  const handleCreateClose = () => setCreateOpen(false);\n\n  const [open, setCreateOpen] = useState(false);\n\n  const [selected, setSelected] = useState();\n\n  return (\n    <div className=\"Dashboard\">\n      <Box paddingLeft={2}>\n        <h1>\n          Course Outline Builder\n        </h1>\n      </Box>\n\n      <Box paddingLeft={2}>\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n          <Button onClick={handleCreateOpen}>Create </Button>\n          <Button>Open </Button>\n          <Button>Delete </Button>\n        </ButtonGroup>\n      </Box>\n\n      <Box paddingTop={2}>\n        <Divider />\n      </Box>\n\n\n      <Box display='flex' margin='auto' justifyContent='center'>\n        <OutlineTable outlines={outlines} />\n      </Box>\n\n\n      <CreateFormDialog open={open} handleCreateClose={handleCreateClose} />\n\n    </div>\n  );\n}\n\n\nexport default Dashboard;\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":25},{"ruleId":"35","severity":1,"message":"39","line":9,"column":8,"nodeType":"37","messageId":"38","endLine":9,"endColumn":15},{"ruleId":"35","severity":1,"message":"40","line":44,"column":9,"nodeType":"37","messageId":"38","endLine":44,"endColumn":19},{"ruleId":"35","severity":1,"message":"41","line":165,"column":10,"nodeType":"37","messageId":"38","endLine":165,"endColumn":18},{"ruleId":"35","severity":1,"message":"42","line":165,"column":20,"nodeType":"37","messageId":"38","endLine":165,"endColumn":31},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Outline' is defined but never used.","'createRows' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]